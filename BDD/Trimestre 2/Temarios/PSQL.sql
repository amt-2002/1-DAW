DECLARE 
    NUMERO INT := 7; -- DECLARAR E INICIALIZAR  
    NUMERO2 INT;


BEGIN 
    NUMERO2 := 4;
    DBMS_OUTPUT.PUT_LINE(NUMERO);
    NUMERO := 12;
    DBMS_OUTPUT.PUT_LINE(NUMERO); 
    DBMS_OUTPUT.PUT_LINE(NUMERO || ' - ' || NUMERO2);  
END; 
/



--ejercicio 3

set serveroutput on;

declare
    VARIABLE1 EMP.ENAME%TYPE; --variable1 varchar2(10)
    VARIABLE2 EMP%ROWTYPE; --variable2.empno, variable2.ename, etc.
begin
    SELECT ENAME INTO VARIABLE1 FROM EMP WHERE EMPNO = 7839;
    dbms_output.put_line('PRIMER CASO' || VARIABLE1);
    SELECT * INTO VARIABLE2 FROM EMP WHERE EMPNO = 7698;   
    dbms_output.put_line('SEGUNDO CASO' || VARIABLE2.ENAME);
end;
/


DECLARE
    ALTURA INT := &ALTURA; 
    BASE INT := &BASE; 
BEGIN
    DBMS_OUTPUT.PUT_LINE('EL AREA DEL TRIANGULO ES ' || (ALTURA*BASE)/2);
END;
/
UNDEFINE BASE; -- NECESARIO PARA BORRAR CACHE
UNDEFINE ALTURA; -- NECESARIO PARA BORRAR CACHE

--SELECT ENAME FROM EMP WHERE EMPNO = 7839;
-- SELECT * FROM EMP WHERE EMPNO = 7698;


DECLARE

    NUMERO INT := &INTRODUZCA_NUMERO;

BEGIN

    CASE NUMERO

    WHEN 1 THEN

        DBMS_OUTPUT.PUT_LINE('HA METIDO EL 1');

    WHEN 2 THEN

        DBMS_OUTPUT.PUT_LINE('HA METIDO EL 2');

    ELSE

        DBMS_OUTPUT.PUT_LINE('HA METIDO UN NÚMERO DISTINTO DE 1 Y 2');

    END CASE;

END;
/

UNDEFINE INTRODUZCA_NUMERO; 

DECLARE

    NUMERO INT := &INTRODUZCA_NUMERO;

BEGIN

    CASE 

    WHEN NUMERO = 1 THEN

        DBMS_OUTPUT.PUT_LINE('HA METIDO EL 1');

    WHEN NUMERO = 2 OR NUMERO BETWEEN 3 AND 4 THEN

        DBMS_OUTPUT.PUT_LINE('HA METIDO EL 2,3,4');

    ELSE

        DBMS_OUTPUT.PUT_LINE('HA METIDO UN NÚMERO DISTINTO DE 1 Y 2');

    END CASE;

END;
/

UNDEFINE INTRODUZCA_NUMERO;


--PESTAÑA TEMA6
--01. CONSTRUCCIÓN DE GUIONES
DECLARE
    NUMERO1 INT := 2;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE(NUMERO1);
        IF NUMERO1 = 0 THEN --PRIMERA FORMA
            EXIT;
        END IF;
        EXIT WHEN NUMERO1 = 1; --SEGUNDA OPCIÓN
        --NUMERO1--
        --NUMERO1++
        NUMERO1 := NUMERO1 - 2;
    END LOOP;
END;
/
 
--EJERCICIO 13
DECLARE
    VAR1 INT := 0;
    CADENA VARCHAR2(150);
BEGIN
    LOOP
        IF VAR1 = 0 THEN
            CADENA := VAR1;
        ELSE
            CADENA := CADENA || ', ' || VAR1;
        END IF;
        VAR1 := VAR1 + 1;
        EXIT WHEN VAR1 > 20;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(CADENA);
END;
/
 
--EJERCICIO 14
DECLARE
    VAR1 INT := 0;
BEGIN   
    LOOP
        DBMS_OUTPUT.PUT_LINE(VAR1);
        VAR1 := VAR1 + 1;
        IF VAR1 > 20 THEN EXIT;
        END IF;
    END LOOP;
END;
/
 
DECLARE
    VAR1 INT := 0;
BEGIN   
    WHILE VAR1 >= 0 LOOP
        DBMS_OUTPUT.PUT_LINE(VAR1);
        VAR1 := VAR1 + 1;
        IF VAR1 > 20 THEN EXIT;
        END IF;
        --VAR1 := -5;
    END LOOP;
END;
/
 
--EJERCICIO 15
DECLARE
    VAR1 INT := 0;
BEGIN   
    WHILE VAR1 <= 20 LOOP
        DBMS_OUTPUT.PUT_LINE(VAR1);
        VAR1 := VAR1 + 1;
    END LOOP;
END;
/

--EJERCICIO 18 
-- DECLARE 
--     NUMEROPAR INT;
BEGIN
    FOR NUMEROPAR IN 1..40 LOOP
        IF MOD(NUMEROPAR, 2) = 0 THEN
            DBMS_OUTPUT.PUT_LINE(NUMEROPAR);
        END IF;
    END LOOP;
END;
/

BEGIN 
    FOR U IN 1..10 LOOP 
        DBMS_OUTPUT.PUT_LINE('TABLA DEL ' || U);
        FOR V IN 1..10 LOOP 
            DBMS_OUTPUT.PUT_LINE(U || ' * ' || V || ' = ' || U * V);
        END LOOP;
    END LOOP;
END;
/

 